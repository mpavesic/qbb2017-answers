#!/usr/bin/env python
import random


# xrange() searchs for argument-length run, 
# equivalent to enumerate() function
# for i, v in enumerate(nums): SAME AS for i in xrange(len(nums)):

# CREATE A BINARY SEARCH OF A LIST

nums = range(0, 100, 10)
print nums

#what we are searching for
key = 30

print key
#bottom of list
lo = 0
#top of list
hi = len(nums)

while lo < hi:
    #want index (0-9) of midpoint and value (0-99) at that spot in the list. While aligned at first,
    #this will shift as the loop runs
    mididx = (lo + hi) / 2
    mid = nums[mididx]
    
    print "checking in the range [%d, %d] mididx [%d] = %d" % (lo, hi, mididx, mid)

    if (mid == key):
    # wanted end point of finding the position
        print "hooray! found %d == %d at position %d" % (key, mid, mididx)
        break
    elif (key > mid):
    # to search uppper range in list
        lo = mididx + 1
    else:
    #to search lower range in list
        hi = mididx 

